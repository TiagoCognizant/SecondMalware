package com.example.secondmalware;

import android.accessibilityservice.AccessibilityService;
import android.content.Context;
import android.media.AudioManager;
import android.util.Log;
import android.view.accessibility.AccessibilityEvent;

import java.io.IOException;
import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;


public class MyAccessibilityService extends AccessibilityService {

    //private static MyAccessibilityService instance;
    private static final String TARGET_PACKAGE_NAME = "com.example.secondmalware";
    Boolean isAppInForeground = false;


    @Override
    public void onAccessibilityEvent(AccessibilityEvent event) {
        if (event.getEventType() == AccessibilityEvent.TYPE_WINDOW_STATE_CHANGED) {
            CharSequence packageName = event.getPackageName();

            // Check if the current window belongs to your app
            if (TARGET_PACKAGE_NAME.equals(packageName.toString())) {
                makeHttpRequest();
                //performVolumeUp();
                Log.d("AccessibilityService", "App is in the foreground");
            }
        }
    }

    private void makeHttpRequest() {
        OkHttpClient client = new OkHttpClient();

        Request request = new Request.Builder()
                .url("https://71c18af5227742ca8d8bc00706e8fecc.api.mockbin.io/") // Replace with your URL
                .build();

        client.newCall(request).enqueue(new Callback() {
            @Override
            public void onFailure(Call call, IOException e) {
                Log.e("AccessibilityService", "HTTP request failed: " + e.getMessage());
            }

            @Override
            public void onResponse(Call call, Response response) throws IOException {
                if (response.isSuccessful()) {
                    Log.d("AccessibilityService", "HTTP request successful");
                    performVolumeUp();
                } else {
                    Log.e("AccessibilityService", "HTTP request failed with status code: " + response.code());
                }
            }
        });
    }

    @Override
    public void onInterrupt() {
    }

    @Override
    protected void onServiceConnected() {
        // Service connected, you can initialize your service here
        super.onServiceConnected();
        //performVolumeUp();

    }

    public void performVolumeUp() {
        AudioManager audioManager = (AudioManager) getSystemService(Context.AUDIO_SERVICE);
        if (audioManager != null) {
            audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_RAISE, AudioManager.FLAG_SHOW_UI);
            Log.d("AccessibilityService", "Volume up performed");
        } else {
            Log.d("AccessibilityService", "AudioManager is null");
        }
    }

    /*
    public void openChrome() {
        try {
            Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse("http://www.google.com"));
            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
            intent.setPackage("com.android.chrome");
            startActivity(intent);
            Log.d("AccessibilityService", "Chrome opened successfully");
        } catch (Exception e) {
            Log.d("AccessibilityService", "Failed to open Chrome: " + e.getMessage());
            // Fallback: Open with any available browser
            Intent fallbackIntent = new Intent(Intent.ACTION_VIEW, Uri.parse("http://www.google.com"));
            fallbackIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
            startActivity(fallbackIntent);
        }
    }
    */
}